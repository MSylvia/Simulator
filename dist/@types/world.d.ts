import { Actor } from './actor';
export declare abstract class World {
    private context;
    private width;
    private height;
    private actors;
    private renderingOrder;
    private sendMouseDownTo;
    private birthtime;
    private savedSize;
    private devicePixelRatio;
    private runOwnAnimationBool;
    bgColor: string;
    private useImage;
    private bgImage;
    private bgPos;
    private registeredIntervals;
    private animationShouldRun;
    constructor(context: CanvasRenderingContext2D, width?: number, height?: number);
    getClass(): any;
    private handleMouseEvent(e);
    private hasFunction(obj, functionName);
    registerInterval(f: Function, i: number): number;
    unregisterInterval(id: number): void;
    pauseAllIntervals(): void;
    startAllIntervals(): void;
    private handleMouseMove(e);
    getLifetime(): number;
    enterFullscreen(): void;
    exitFullscreen(): void;
    saveSize(): void;
    restoreSize(): void;
    setSize(width: number, height: number): void;
    addToWorld(actor: Actor, x?: number, y?: number, percent?: boolean): void;
    removeActor(a: Actor): void;
    getActors(className?: string): Actor[];
    getWidth(): number;
    getHeight(): number;
    private clear();
    setBackgroundColor(color: string): void;
    useBackgroundImage(image: HTMLImageElement, use?: boolean, pos?: {
        x: number;
        y: number;
    }): void;
    getBackgroundColor(): string;
    animate(): void;
    runOwnAnimation(run?: boolean): void;
    private render();
    setRenderingOrder(...order: any[]): void;
    start(): void;
    pause(): void;
}
